image: node:18.20.7-alpine

include:
  - project: "procivis/one/one-operations"
    file:
      - "gitlab/docker.gitlab-ci.yml"
      - "gitlab/github.gitlab-ci.yml"
      - "gitlab/ci-tools.gitlab-ci.yml"

variables:
  PNPM_CACHE_FOLDER: "~/.pnpm-store"
  GITHUB_PROJECT: "procivis/one-react-native-components"

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

stages:
  - prepare
  - test
  - build
  - publish
  - deploy
  - github
  - sync_with_jira

.build-cache: &build-cache
  key:
    files:
      - pnpm-lock.yaml
      - package.json
  paths:
    - node_modules/
    - lib/
    - ${PNPM_CACHE_FOLDER}
  policy: pull

.app_settings: &app_settings
  - APP_VERSION=${APP_VERSION:-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA}
  - IMAGE_NAME=$CI_REGISTRY_IMAGE/storybook
  - IMAGE_TAG=$IMAGE_NAME:$APP_VERSION

.pnpm_install: &pnpm_install
  - npm config set -- @procivis:registry https://${CI_SERVER_HOST}/api/v4/packages/npm/
  - npm config set -- //${CI_SERVER_HOST}/:_authToken ${CI_JOB_TOKEN}
  - npm config set -- //${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken ${CI_JOB_TOKEN}
  - npm install --global corepack@latest
  - corepack enable
  - corepack prepare pnpm@latest-10 --activate
  - export PNPM_HOME=$HOME/.local/share/pnpm
  - export PATH="$PNPM_HOME:$PATH"
  - pnpm config set global-bin-dir $PNPM_HOME
  - pnpm config set store-dir ${PNPM_CACHE_FOLDER}

.install-node-modules: &install-node-modules
  - >
    if [ -d ./node_modules ] && [ "$(ls -A ./node_modules)" ]; then
      echo "node_modules exists and seems valid, not re-installing deps."
    else
      echo "node_modules does not exist or is not valid, re-installing deps."
      apk add --update --no-cache --virtual .build-deps alpine-sdk libc6-compat gcompat bash
      npm config set -- @procivis:registry https://${CI_SERVER_HOST}/api/v4/packages/npm/
      npm config set -- //${CI_SERVER_HOST}/:_authToken ${CI_JOB_TOKEN}
      npm config set -- //${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken ${CI_JOB_TOKEN}
      pnpm add -g node-gyp @mapbox/node-pre-gyp
      pnpm install --frozen-lockfile --network-concurrency 1
    fi

.modules_setup:
  cache:
    <<: *build-cache
  before_script:
    - *pnpm_install
    - *install-node-modules
    - *app_settings

.only_tag:
  rules:
    - if: $CI_COMMIT_TAG

.only_manual_tag:
  rules:
    - if: $CI_COMMIT_TAG
      when: manual

.only_main:
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"


before_script:
  - *app_settings


build_deps:
  stage: prepare
  extends: .modules_setup
  script:
    - pnpm prepare
  cache:
    policy: pull-push

lint:
  stage: test
  needs: [build_deps]
  extends: .modules_setup
  script:
    - pnpm lint

compile:
  stage: test
  needs: [build_deps]
  extends: .modules_setup
  script:
    - pnpm typescript

test:
  stage: test
  needs: [build_deps]
  extends: .modules_setup
  script:
    - pnpm test

build:storybook:
  stage: build
  needs: [build_deps]
  extends:
    - .modules_setup
    - .only_main
  script:
    - pnpm build-storybook
  artifacts:
    paths:
      - storybook-static

publish:storybook:
  stage: publish
  needs:
    - job: build:storybook
      artifacts: true
  extends:
    - .docker_publish
    - .only_main

publish:npm:private:
  stage: deploy
  script:
    - npm config set @procivis:registry https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/
    - npm config set //${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken ${CI_JOB_TOKEN}
    - npm publish --verbose --access restricted --tag stable
  extends:
    - .modules_setup
    - .only_tag

publish:npm:public:
  stage: deploy
  before_script:
    - *install-node-modules
  script:
    - npm config set //registry.npmjs.org/:_authToken ${NPMJS_TOKEN}
    - npm publish --verbose --access public
  extends:
    - .modules_setup
    - .only_manual_tag

deploy:storybook:
  stage: deploy
  needs:
    - publish:storybook
  extends:
    - .only_main
  variables:
    HELM_VALUES_FILE: values/app-components.dev.procivis-one.yaml
    K8S_NAMESPACE: default
    HELM_APP_NAME: react-native
    HELM_PATH: charts/one-rn-components-chart
    DEPLOY_IMAGE_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    PROJECT_TITLE: $CI_PROJECT_TITLE
    DEPLOY_ENVIRONMENT: Dev
    DEPLOYMENT_NAME: react-native-app-components-chart
  trigger:
    project: procivis/one/one-operations
    branch: main
    strategy: depend

github:push:
  stage: github
  extends:
    - .ci-tool:open_source_release

set_jira_version:
  stage: sync_with_jira
  extends:
    - .ci-tool:set_jira_version
