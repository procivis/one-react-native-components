image: node:18.16.0-alpine

variables:
  YARN_CACHE_FOLDER: './.yarn/cache'
  YARN_ENABLE_GLOBAL_CACHE: 'false'

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

stages:
  - prepare
  - test
  - build
  - publish
  - deploy

.build-cache: &build-cache
  key:
    files:
      - yarn.lock
      - package.json
  paths:
    - node_modules/
    - lib/
    - ${YARN_CACHE_FOLDER}
  policy: pull

.install-node-modules: &install-node-modules
  - >
    if [ -d ./node_modules ] && [ "$(ls -A ./node_modules)" ]; then
      echo "node_modules exists and seems valid, not re-installing deps."
    else
      echo "node_modules does not exist or is not valid, re-installing deps."
      apk add --update --no-cache --virtual .build-deps alpine-sdk libc6-compat gcompat bash
      npm config set -- @procivis:registry https://${CI_SERVER_HOST}/api/v4/packages/npm/
      npm config set -- //${CI_SERVER_HOST}/:_authToken ${CI_JOB_TOKEN}
      npm config set -- //${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken ${CI_JOB_TOKEN}
      yarn global add node-gyp @mapbox/node-pre-gyp
      yarn install --frozen-lockfile --network-concurrency 1
    fi

.modules_setup:
  cache:
    <<: *build-cache
  before_script:
    - *install-node-modules

.only_tag:
  rules:
    - if: $CI_COMMIT_TAG

.only_main:
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"

.deploy_k8s:
  image: registry.gitlab.procivis.ch/procivis/one/one-operations/az-helm-kubectl:1.25.7
  dependencies: []
  variables:
    DEPLOY_IMAGE_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    K8S_TYPE: deployment
    HELM_APP_NAME: react-native
    HELM_PATH: app-components-chart
  before_script:
    - az aks install-cli
    - az login --service-principal -u "$AAD_SERVICE_PRINCIPAL_CLIENT_ID" -p "$AAD_SERVICE_PRINCIPAL_CLIENT_SECRET" --tenant "$AD_TENANT_ID"
    - az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME
    - kubelogin convert-kubeconfig -l spn
  script:
    - cd "$HELM_PATH"
    - >
      helm upgrade --install $HELM_APP_NAME .
      --values $HELM_VALUES_FILE
      --set "image.tag=$DEPLOY_IMAGE_TAG"
      --namespace $K8S_NAMESPACE
    - kubectl rollout restart $K8S_TYPE $HELM_APP_NAME-$HELM_PATH --namespace=$K8S_NAMESPACE

build_deps:
  stage: prepare
  extends: .modules_setup
  script:
    - ''
  cache:
    policy: push

lint:
  stage: test
  needs: [build_deps]
  extends: .modules_setup
  script:
    - yarn lint

compile:
  stage: test
  needs: [build_deps]
  extends: .modules_setup
  script:
    - yarn typescript

test:
  stage: test
  needs: [build_deps]
  extends: .modules_setup
  script:
    - yarn test

build:storybook:
  stage: build
  image: node:16-alpine
  needs: [build_deps]
  extends:
    - .modules_setup
    - .only_main
  script:
    - yarn build-storybook
  artifacts:
    paths:
      - storybook-static

publish:storybook:
  stage: publish
  image: docker:20
  needs: [build:storybook]
  dependencies: [build:storybook]
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/storybook:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  services:
    - docker:20-dind
  script:
    - docker build -t $IMAGE_TAG -f ./docker/Dockerfile .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $IMAGE_TAG
  extends:
    - .only_main

publish:npm:
  stage: deploy
  needs: [test]
  script:
    - npm config set @procivis:registry https://${CI_SERVER_HOST}/api/v4/npm/
    - npm config set //${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken ${CI_JOB_TOKEN}
    - npm publish --verbose --access restricted --tag stable
  extends:
    - .modules_setup
    - .only_tag

deploy:storybook:
  stage: deploy
  needs: [publish:storybook]
  extends:
    - .deploy_k8s
    - .only_main
  variables:
    HELM_VALUES_FILE: values/app-components.dev.procivis-one.yaml
    K8S_NAMESPACE: default
